# Configure logging for testing: optionally with log file
#日志输出级别
log4j.rootLogger= DEBUG,stdout,dufLog
# log4j.rootLogger=WARN, stdout, logfile

#日志输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

#输出日志到文件
log4j.appender.dufLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.dufLog.File=${catalina.home}/pm/logs/log.log
log4j.appender.dufLog.DatePattern = '_'yyyy-MM-dd-HH-mm'.log'
log4j.appender.dufLog.MaxFileSize=10MB
log4j.appender.dufLog.layout=org.apache.log4j.PatternLayout
log4j.appender.dufLog.layout.ConversionPattern=%d%n%m%n
log4j.appender.dufLog.MaxSizeRollBackups=999
log4j.appender.dufLog.CountDirection=-1
log4j.appender.dufLog.maxTimeRollBackups=7

### 保存异常信息到单独文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ${catalina.home}/pm/logs/error.log ## 异常日志文件名
log4j.appender.D.Append = true
log4j.appender.D.Threshold = ERROR ## 只输出ERROR级别以上的日志!!!
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n 